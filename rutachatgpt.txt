const express = require('express');
const router = express.Router();
const validarToken = require('../middleware/validarToken');
const validarPrompt = require('../middleware/validarPrompt');
/* const {
  registrarConsulta,
  obtenerConsulta,
  obtenerConsultasUsuario
} = require('../controllers/chatgptController'); 

router.post('/', validarToken, validarPrompt, registrarConsulta);
router.get('/:id', validarToken, obtenerConsulta);
router.get('/user/:id_user', validarToken, obtenerConsultasUsuario);*/

// Ruta para registrar una consulta en la API de ChatGPT
router.post('/', validarPrompt, validarToken, async (req, res) => {
  try {
    const { prompt, response, id_user } = req.body;

    // Crear un nuevo objeto de consulta
    const newChat = new ChatGpt({
      prompt,
      response,
      id_user,
      date_create: new Date()
    });

    // Guardar la consulta en la base de datos
    await newChat.save();

    res.status(200).json({ message: 'Consulta registrada exitosamente' });
  } catch (error) {
    res.status(500).json({ error: 'Error al registrar la consulta' });
  }
});

// Ruta para obtener una consulta específica
router.get('/:id', validarToken, async (req, res) => {
  try {
    const { id } = req.params;

    // Buscar la consulta por su ID
    const chat = await ChatGpt.findById(id);

    if (!chat) {
      return res.status(404).json({ error: 'Consulta no encontrada' });
    }

    res.status(200).json(chat);
  } catch (error) {
    res.status(500).json({ error: 'Error al obtener la consulta' });
  }
});

// Ruta para obtener todas las consultas de un usuario específico
router.get('/user/:id_user', validarToken, async (req, res) => {
  try {
    const { id_user } = req.params;

    // Buscar todas las consultas del usuario por su ID
    const chats = await ChatGpt.find({ id_user });

    res.status(200).json(chats);
  } catch (error) {
    res.status(500).json({ error: 'Error al obtener las consultas del usuario' });
  }
});

module.exports = router;
